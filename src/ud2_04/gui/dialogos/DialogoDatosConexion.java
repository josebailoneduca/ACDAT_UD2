package ud2_04.gui.dialogos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import javax.swing.JComponent;

/*
LICENCIA JOSE JAVIER BO
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
Lista de paquetes:
 */
/**
 *
 * @author Jose Javier Bailon Ortiz
 */
public class DialogoDatosConexion extends javax.swing.JDialog implements ActionListener {

    public static final String dirverMySQL = "com.mysql.cj.jdbc.Driver";
    public static final String dirverSQLite = "org.sqlite.JDBC";

    HashMap<String, String> resultado;

    /**
     * Creates new form DatosConexion
     */
    public DialogoDatosConexion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initPropio();
    }

    private void initPropio() {
        inputDriver.addActionListener(this);
        btnAceptar.addActionListener(this);
        btnCancelar.addActionListener(this);
        refrescarEstado();
    }

    public void mostrar() {
        this.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        String ac = e.getActionCommand();

        switch (ac) {
            case "driver" ->
                refrescarEstado();
            case "cancelar" -> {
                resultado = null;
                this.dispose();
            }
            case "aceptar" -> {
                guardarDatos();
                this.setVisible(false);
            }
        }
    }

    private void seleccionDriver() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lbDriver = new javax.swing.JLabel();
        inputDriver = new javax.swing.JComboBox<>();
        lbServidor = new javax.swing.JLabel();
        lbPuerto = new javax.swing.JLabel();
        lbUsuario = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        inputServidor = new javax.swing.JTextField();
        inputPuerto = new javax.swing.JTextField();
        inputUsuario = new javax.swing.JTextField();
        inputPassword = new javax.swing.JTextField();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lbRuta = new javax.swing.JLabel();
        inputRuta = new javax.swing.JTextField();
        lbBaseDatos = new javax.swing.JLabel();
        inputBaseDatos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Parámetros de conexion");

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {100, 9, 200, 9, 0};
        jPanel1Layout.rowHeights = new int[] {0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0, 9, 0};
        jPanel1.setLayout(jPanel1Layout);

        lbDriver.setText("Driver:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lbDriver, gridBagConstraints);

        inputDriver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MySQL", "SQLite" }));
        inputDriver.setActionCommand("driver");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputDriver, gridBagConstraints);

        lbServidor.setText("Servidor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        jPanel1.add(lbServidor, gridBagConstraints);

        lbPuerto.setText("Puerto:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lbPuerto, gridBagConstraints);

        lbUsuario.setText("Usuario:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lbUsuario, gridBagConstraints);

        lbPassword.setText("Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lbPassword, gridBagConstraints);

        inputServidor.setText("localhost");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputServidor, gridBagConstraints);

        inputPuerto.setText("3306");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputPuerto, gridBagConstraints);

        inputUsuario.setText("root");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputUsuario, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputPassword, gridBagConstraints);

        btnAceptar.setText("ACEPTAR");
        btnAceptar.setActionCommand("aceptar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(btnAceptar, gridBagConstraints);

        btnCancelar.setText("CANCELAR");
        btnCancelar.setActionCommand("cancelar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(btnCancelar, gridBagConstraints);

        lbRuta.setText("Ruta Archivo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel1.add(lbRuta, gridBagConstraints);

        inputRuta.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputRuta, gridBagConstraints);

        lbBaseDatos.setText("Base de Datos:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(lbBaseDatos, gridBagConstraints);

        inputBaseDatos.setText("trabajosempleados");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(inputBaseDatos, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JTextField inputBaseDatos;
    private javax.swing.JComboBox<String> inputDriver;
    private javax.swing.JTextField inputPassword;
    private javax.swing.JTextField inputPuerto;
    private javax.swing.JTextField inputRuta;
    private javax.swing.JTextField inputServidor;
    private javax.swing.JTextField inputUsuario;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbBaseDatos;
    private javax.swing.JLabel lbDriver;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbPuerto;
    private javax.swing.JLabel lbRuta;
    private javax.swing.JLabel lbServidor;
    private javax.swing.JLabel lbUsuario;
    // End of variables declaration//GEN-END:variables

 

    private void refrescarEstado() {
       JComponent[]  elementosMysql = new JComponent[]{lbBaseDatos, lbDriver, lbPassword, lbPuerto, lbServidor, lbUsuario, inputPuerto, inputServidor, inputUsuario, inputBaseDatos};
       JComponent[]  elementosSqlite = new JComponent[]{lbRuta, inputRuta};
        //mostrar elementos de mysql
        if (inputDriver.getSelectedIndex() == 0) {
            for (JComponent c : elementosMysql) {
                c.setVisible(true);
            }
            for (JComponent c : elementosSqlite) {
                c.setVisible(false);
            }
            //mostar elementos de sqlite
        } else {
            for (JComponent c : elementosMysql) {
                c.setVisible(false);
            }
            for (JComponent c : elementosSqlite) {
                c.setVisible(true);
            }
        }
    }

    private void guardarDatos() {
        resultado = new HashMap<String, String>();
        if (inputDriver.getSelectedIndex() == 0) {
            resultado.put("TIPO", "0");
            resultado.put("DRIVER", dirverMySQL);
            resultado.put("URL", "jdbc:mysql://" + inputServidor.getText() + ":" + inputPuerto.getText() + "/"+inputBaseDatos.getText());
            resultado.put("USER", inputUsuario.getText());
            resultado.put("PASSWORD", inputPassword.getText());
        } else {
            resultado.put("TIPO", "1");
            resultado.put("DRIVER", dirverSQLite);
            resultado.put("URL", "jdbc:sqlite:" + inputRuta.getText());
        }
        dispose();
    }

    public HashMap<String, String> getDatos() {
        return this.resultado;
    }

}//fin DatosConexion
