/*
LICENCIA JOSE JAVIER BO
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
Lista de paquetes:
 */
package ud2_01.vista;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.TableRowSorter;
import ud2_01.controlador.Controlador;
import ud2_01.vista.listeners.VentanaListener;
import ud2_01.vista.tablemodels.EmpleadosTableModel;

/**
 *
 * @author Jose Javier BO
 */
public class Ventana extends javax.swing.JFrame {

    private VentanaListener listener;
    public boolean filtroPorDni=true;
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        eventos();
        configTablaEmpleados();
        actualizarEmpleados();
    }
    private void eventos() {
        this.listener = new VentanaListener(this);
        miSalir.addActionListener(listener);
        btnInsert.addActionListener(listener);
        btnDelete.addActionListener(listener);
        btnEdit.addActionListener(listener);
        btnRefresh.addActionListener(listener);
        btnQuitarFiltro.addActionListener(listener);
        rbDni.addActionListener(listener);
        rbSueldo.addActionListener(listener);
        inputFiltro.addKeyListener(listener);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grbFiltro = new javax.swing.ButtonGroup();
        scrollTabla = new javax.swing.JScrollPane();
        tablaEmpleados = new javax.swing.JTable();
        panelCrud = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        panelFiltro = new javax.swing.JPanel();
        panelTipoFiltro = new javax.swing.JPanel();
        lbFiltro = new javax.swing.JLabel();
        rbDni = new javax.swing.JRadioButton();
        rbSueldo = new javax.swing.JRadioButton();
        inputFiltro = new javax.swing.JTextField();
        btnQuitarFiltro = new javax.swing.JButton();
        barraMenu = new javax.swing.JMenuBar();
        menuArchivo = new javax.swing.JMenu();
        miSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scrollTabla.setViewportView(tablaEmpleados);

        panelCrud.setLayout(new java.awt.GridLayout(4, 1, 0, 10));

        btnInsert.setText("Insertar");
        panelCrud.add(btnInsert);

        btnDelete.setText("Eliminar");
        panelCrud.add(btnDelete);

        btnEdit.setLabel("Editar");
        panelCrud.add(btnEdit);

        btnRefresh.setText("Actualizar lista");
        btnRefresh.setToolTipText("");
        btnRefresh.setActionCommand("actualizar");
        panelCrud.add(btnRefresh);

        panelFiltro.setLayout(new java.awt.GridLayout(3, 0, 0, 10));

        lbFiltro.setText("Filtrar:");
        panelTipoFiltro.add(lbFiltro);

        grbFiltro.add(rbDni);
        rbDni.setSelected(true);
        rbDni.setText("DNI");
        rbDni.setActionCommand("dni");
        panelTipoFiltro.add(rbDni);

        grbFiltro.add(rbSueldo);
        rbSueldo.setText("Sueldo");
        rbSueldo.setActionCommand("sueldo");
        panelTipoFiltro.add(rbSueldo);

        panelFiltro.add(panelTipoFiltro);
        panelFiltro.add(inputFiltro);

        btnQuitarFiltro.setText("Quitar filtro");
        btnQuitarFiltro.setActionCommand("quitarfiltro");
        panelFiltro.add(btnQuitarFiltro);

        menuArchivo.setText("Archivo");

        miSalir.setText("Salir");
        miSalir.setActionCommand("salir");
        menuArchivo.add(miSalir);

        barraMenu.add(menuArchivo);

        setJMenuBar(barraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelCrud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollTabla, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(panelCrud, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(panelFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar barraMenu;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnQuitarFiltro;
    private javax.swing.JButton btnRefresh;
    private javax.swing.ButtonGroup grbFiltro;
    private javax.swing.JTextField inputFiltro;
    private javax.swing.JLabel lbFiltro;
    private javax.swing.JMenu menuArchivo;
    private javax.swing.JMenuItem miSalir;
    private javax.swing.JPanel panelCrud;
    private javax.swing.JPanel panelFiltro;
    private javax.swing.JPanel panelTipoFiltro;
    private javax.swing.JRadioButton rbDni;
    private javax.swing.JRadioButton rbSueldo;
    private javax.swing.JScrollPane scrollTabla;
    private javax.swing.JTable tablaEmpleados;
    // End of variables declaration//GEN-END:variables

    public void salir() {
        if (confirmar("¿Desea salir?"))
            Controlador.salir();
    }


    private boolean confirmar(String msg){
        int respuesta = JOptionPane.showConfirmDialog(this, msg,"", JOptionPane.YES_NO_OPTION);
        return respuesta == JOptionPane.YES_OPTION;
    }

    private void configTablaEmpleados() {
        EmpleadosTableModel etm = new EmpleadosTableModel(Controlador.empleados);
        tablaEmpleados.setModel(etm);
        
        //crear sorter
        TableRowSorter<EmpleadosTableModel> rowSorter = new TableRowSorter<>(etm);
        tablaEmpleados.setRowSorter(rowSorter);

        //ordenacion por defecto inicial
        List<RowSorter.SortKey> sortKeys = new ArrayList<>();
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        rowSorter.setSortKeys(sortKeys);
        
    }
    
    private void actualizarTablaEmpleados() {
        //actualizar los datos de la tabla 
        try {
            EmpleadosTableModel etm = (EmpleadosTableModel) tablaEmpleados.getModel();
            etm.fireTableDataChanged();
        } catch (ClassCastException ex) {
        }
    }
    
    public void filtrar(){
        //seleccionar columna de filtro
        int indiceFiltro=2;
        if (!filtroPorDni)
            indiceFiltro=3;
        RowFilter<EmpleadosTableModel, Integer> rf = RowFilter.regexFilter(inputFiltro.getText(), indiceFiltro);
        
        TableRowSorter<EmpleadosTableModel> rs = (TableRowSorter<EmpleadosTableModel>) tablaEmpleados.getRowSorter();
        rs.setRowFilter(rf);
        tablaEmpleados.getSelectionModel().clearSelection();
}

    public void actualizarEmpleados() {
        Controlador.actualizarEmpleados();
       actualizarTablaEmpleados();
    }

    public void msgError(String msg) {
        JOptionPane.showMessageDialog(this, msg, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public void quitarFiltro() {
        inputFiltro.setText("");
        filtrar();
    }
}